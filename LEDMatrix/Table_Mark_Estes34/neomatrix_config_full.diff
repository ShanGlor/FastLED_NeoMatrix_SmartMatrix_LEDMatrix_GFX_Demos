--- neomatrix_config_full.h.orig	2020-08-30 11:50:26.000000000 -0700
+++ neomatrix_config_full.h	2020-08-30 11:51:46.561782464 -0700
@@ -1,6 +1,8 @@
 #ifndef neomatrix_config_h
 #define neomatrix_config_h
 
+#define SMARTMATRIX
+
 /* There are 2 major backends
 1) SmartMatrix (via SmartMatrix::GFX)
 2) Not SmartMatrix (via FastLED::NeoMatrix or FastLED_SPITFT::GFX)
@@ -391,6 +393,7 @@
     #include <SmartMatrix_GFX.h>
     uint8_t matrix_brightness = 255;
     
+#if 0
     #ifdef ESP32
     #pragma message "SmartMatrix for ESP32 with 64x32 16 scan panel and 64x96 resolution"
     const uint8_t kPanelType = SMARTMATRIX_HUB75_32ROW_MOD16SCAN;   // use SMARTMATRIX_HUB75_16ROW_MOD8SCAN for common 16x32 panels
@@ -405,9 +408,17 @@
     #else
     #error Unknown architecture (not ESP32 or teensy 3.5/6)
     #endif
+#endif
+
+    #pragma message "Compiling for Teensy with 64x64 2 64x32 panels"
+    const uint8_t kPanelType = SMARTMATRIX_HUB75_32ROW_MOD16SCAN;   // use SMARTMATRIX_HUB75_16ROW_MOD8SCAN for common 16x32 panels
+    //const uint8_t kPanelType = SMARTMATRIX_HUB75_64ROW_MOD32SCAN;
+    const uint16_t MATRIX_TILE_WIDTH = 64; // width of EACH NEOPIXEL MATRIX (not total display)
+    const uint16_t MATRIX_TILE_HEIGHT = 32; // height of each matrix
+
     // Used by LEDMatrix
     const uint8_t MATRIX_TILE_H     = 1;  // number of matrices arranged horizontally
-    const uint8_t MATRIX_TILE_V     = 1;  // number of matrices arranged vertically
+    const uint8_t MATRIX_TILE_V     = 2;  // number of matrices arranged vertically
     
     // Used by NeoMatrix
     const uint16_t mw = MATRIX_TILE_WIDTH *  MATRIX_TILE_H;
